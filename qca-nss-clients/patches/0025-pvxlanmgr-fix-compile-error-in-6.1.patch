--- a/pvxlanmgr/nss_pvxlanmgr.c
+++ b/pvxlanmgr/nss_pvxlanmgr.c
@@ -18,6 +18,7 @@
  * nss_pvxlanmgr.c
  *	NSS to HLOS Pvxlan manager
  */
+#include "nss_pvxlanmgr.h"
 #include "nss_pvxlanmgr_priv.h"
 
 /*
@@ -431,19 +432,19 @@ EXPORT_SYMBOL(nss_pvxlanmgr_netdev_disab
 nss_pvxlanmgr_status_t nss_pvxlanmgr_netdev_enable(struct net_device *dev)
 {
 	struct nss_pvxlanmgr_priv *priv;
-	nss_tx_status_t ret;
+	nss_pvxlanmgr_status_t ret;
 
 	dev_hold(dev);
 	priv = netdev_priv(dev);
 	nss_pvxlanmgr_info("%px: tunnel enable is being called\n", dev);
-	ret = nss_pvxlanmgr_tunnel_tx_msg_enable(priv->pvxlan_ctx, priv->if_num_host_inner, priv->if_num_outer);
+	ret = (nss_pvxlanmgr_status_t)nss_pvxlanmgr_tunnel_tx_msg_enable(priv->pvxlan_ctx, priv->if_num_host_inner, priv->if_num_outer);
 	if (ret != NSS_TX_SUCCESS) {
 		nss_pvxlanmgr_warn("%px: Tunnel enable failed: %d\n", dev, ret);
 		dev_put(dev);
 		return ret;
 	}
 
-	ret = nss_pvxlanmgr_tunnel_tx_msg_enable(priv->pvxlan_ctx, priv->if_num_outer, priv->if_num_host_inner);
+	ret = (nss_pvxlanmgr_status_t)nss_pvxlanmgr_tunnel_tx_msg_enable(priv->pvxlan_ctx, priv->if_num_outer, priv->if_num_host_inner);
 	if (ret != NSS_TX_SUCCESS) {
 		nss_pvxlanmgr_warn("%px: Tunnel enable failed: %d\n", dev, ret);
 		nss_pvxlanmgr_tunnel_tx_msg_disable(priv->pvxlan_ctx, priv->if_num_host_inner);
@@ -524,7 +525,7 @@ EXPORT_SYMBOL(nss_pvxlanmgr_netdev_destr
  * nss_pvxlanmgr_netdev_create()
  *	API to create a Pvxlan netdev
  */
-struct net_device *nss_pvxlanmgr_netdev_create()
+struct net_device *nss_pvxlanmgr_netdev_create(void)
 {
 	struct nss_pvxlanmgr_priv *priv;
 	struct net_device *dev;
