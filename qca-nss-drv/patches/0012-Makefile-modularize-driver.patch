--- a/nss_hal/nss_hal.c
+++ b/nss_hal/nss_hal.c
@@ -489,6 +489,7 @@ int nss_hal_probe(struct platform_device
 		nss_portid_register_handler();
 	}
 
+#ifdef NSS_DRV_WIFI_ENABLE
 	if (npd->wifioffload_enabled == NSS_FEATURE_ENABLED) {
 		nss_top->wifi_handler_id = nss_dev->id;
 		nss_top->dynamic_interface_table[NSS_DYNAMIC_INTERFACE_TYPE_VAP] = nss_dev->id;
@@ -506,6 +507,7 @@ int nss_hal_probe(struct platform_device
 		nss_top->oam_handler_id = nss_dev->id;
 		nss_oam_register_handler();
 	}
+#endif
 
 	if (npd->bridge_enabled == NSS_FEATURE_ENABLED) {
 		nss_top->bridge_handler_id = nss_dev->id;
@@ -513,11 +515,13 @@ int nss_hal_probe(struct platform_device
 		nss_bridge_init();
 	}
 
+#ifdef NSS_DRV_VLAN_ENABLE
 	if (npd->vlan_enabled == NSS_FEATURE_ENABLED) {
 		nss_top->vlan_handler_id = nss_dev->id;
 		nss_top->dynamic_interface_table[NSS_DYNAMIC_INTERFACE_TYPE_VLAN] = nss_dev->id;
 		nss_vlan_register_handler();
 	}
+#endif
 
 #if defined(NSS_HAL_IPQ807x_SUPPORT) || defined(NSS_HAL_IPQ60XX_SUPPORT)
 	if (npd->qvpn_enabled == NSS_FEATURE_ENABLED) {
--- a/nss_init.c
+++ b/nss_init.c
@@ -751,11 +751,12 @@ static int __init nss_init(void)
 	 */
 	nss_project_register_sysctl();
 
+#ifdef NSS_DRV_PPPOE_ENABLE
 	/*
 	 * Registering sysctl for pppoe specific config.
 	 */
 	nss_pppoe_register_sysctl();
-
+#endif
 	/*
 	 * Setup Runtime Sample values
 	 */
@@ -866,10 +867,12 @@ static void __exit nss_cleanup(void)
 	 */
 	nss_c2c_tx_unregister_sysctl();
 
+#ifdef NSS_DRV_PPPOE_ENABLE
 	/*
 	 * Unregister pppoe specific sysctl
 	 */
 	nss_pppoe_unregister_sysctl();
+#endif
 
 	/*
 	 * Unregister ipv4/6 specific sysctl
@@ -889,9 +892,9 @@ static void __exit nss_cleanup(void)
 	/*
 	 * cleanup ppe on supported platform
 	 */
-	if (of_machine_is_compatible("qcom,ipq807x") || of_machine_is_compatible("qcom,ipq6018")) {
-		nss_ppe_free();
-	}
+#ifdef NSS_DRV_PPE_ENABLE
+	nss_ppe_free();
+#endif
 
 	platform_driver_unregister(&nss_driver);
 }
